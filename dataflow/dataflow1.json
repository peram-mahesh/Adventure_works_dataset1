{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dataset_json",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "dataset_json",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dataset_json",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "flatten2"
				},
				{
					"name": "flatten3"
				},
				{
					"name": "flatten4"
				},
				{
					"name": "flatten5"
				},
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          accessLevel as string,",
				"          cardSettings as (displayColumnIds as long[], level as short, viewByColumnId as long),",
				"          cellImageUploadEnabled as boolean,",
				"          columns as (autoNumberFormat as (fill as boolean, prefix as string, suffix as string), formula as string, id as long, index as short, options as string[], primary as boolean, systemColumnType as string, tags as string[], title as string, type as string, validation as boolean, version as boolean, width as short)[],",
				"          createdAt as timestamp,",
				"          dependenciesEnabled as boolean,",
				"          effectiveAttachmentOptions as string[],",
				"          ganttEnabled as boolean,",
				"          hasSummaryFields as boolean,",
				"          id as long,",
				"          isMultiPicklistEnabled as boolean,",
				"          modifiedAt as timestamp,",
				"          name as string,",
				"          permalink as string,",
				"          resourceManagementEnabled as boolean,",
				"          resourceManagementType as string,",
				"          rows as (cells as (columnId as long, displayValue as string, formula as string, value as string)[], createdAt as timestamp, expanded as boolean, id as long, modifiedAt as timestamp, rowNumber as short, siblingId as long)[],",
				"          totalRowCount as short,",
				"          userPermissions as (summaryPermissions as string),",
				"          userSettings as (criticalPathEnabled as boolean, displaySummaryTasks as boolean),",
				"          version as short,",
				"          workspace as (id as long, name as string)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'singleDocument') ~> source1",
				"source(output(",
				"          accessLevel as string,",
				"          cardSettings as (displayColumnIds as long[], level as short, viewByColumnId as long),",
				"          cellImageUploadEnabled as boolean,",
				"          columns as (autoNumberFormat as (fill as boolean, prefix as string, suffix as string), formula as string, id as long, index as short, options as string[], primary as boolean, systemColumnType as string, tags as string[], title as string, type as string, validation as boolean, version as boolean, width as short)[],",
				"          createdAt as timestamp,",
				"          dependenciesEnabled as boolean,",
				"          effectiveAttachmentOptions as string[],",
				"          ganttEnabled as boolean,",
				"          hasSummaryFields as boolean,",
				"          id as long,",
				"          isMultiPicklistEnabled as boolean,",
				"          modifiedAt as timestamp,",
				"          name as string,",
				"          permalink as string,",
				"          resourceManagementEnabled as boolean,",
				"          resourceManagementType as string,",
				"          rows as (cells as (columnId as long, displayValue as string, formula as string, value as string)[], createdAt as timestamp, expanded as boolean, id as long, modifiedAt as timestamp, rowNumber as short, siblingId as long)[],",
				"          totalRowCount as short,",
				"          userPermissions as (summaryPermissions as string),",
				"          userSettings as (criticalPathEnabled as boolean, displaySummaryTasks as boolean),",
				"          version as short,",
				"          workspace as (id as long, name as string)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'singleDocument') ~> source2",
				"source1 foldDown(unroll(rows.cells, rows),",
				"     mapColumn(",
				"          columns,",
				"          createdAt,",
				"          dependenciesEnabled,",
				"          effectiveAttachmentOptions,",
				"          ganttEnabled,",
				"          hasSummaryFields,",
				"          id,",
				"          isMultiPicklistEnabled,",
				"          modifiedAt,",
				"          name,",
				"          permalink,",
				"          resourceManagementEnabled,",
				"          resourceManagementType,",
				"          rows,",
				"          totalRowCount,",
				"          userPermissions,",
				"          userSettings,",
				"          version,",
				"          workspace",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 foldDown(unrollMultiple(columns,columns.options,rows.cells),",
				"     mapColumn(",
				"          columns,",
				"          createdAt,",
				"          ganttEnabled,",
				"          hasSummaryFields,",
				"          id,",
				"          modifiedAt,",
				"          name,",
				"          permalink,",
				"          resourceManagementEnabled,",
				"          resourceManagementType,",
				"          rows",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: false) ~> flatten2",
				"source2 foldDown(unroll(rows.cells, rows),",
				"     mapColumn(",
				"          columnId = rows.cells.columnId,",
				"          displayValue = rows.cells.displayValue,",
				"          formula = rows.cells.formula,",
				"          value = rows.cells.value,",
				"          createdAt = rows.createdAt,",
				"          expanded = rows.expanded,",
				"          id = rows.id,",
				"          modifiedAt = rows.modifiedAt,",
				"          rowNumber = rows.rowNumber,",
				"          siblingId = rows.siblingId",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten3",
				"source2 foldDown(unroll(columns),",
				"     mapColumn(",
				"          columns,",
				"          createdAt,",
				"          dependenciesEnabled,",
				"          effectiveAttachmentOptions,",
				"          ganttEnabled,",
				"          hasSummaryFields,",
				"          id,",
				"          isMultiPicklistEnabled,",
				"          modifiedAt,",
				"          name,",
				"          permalink,",
				"          resourceManagementEnabled,",
				"          resourceManagementType,",
				"          rows",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten4",
				"flatten4 foldDown(unroll(rows.cells),",
				"     mapColumn(",
				"          columns,",
				"          createdAt,",
				"          dependenciesEnabled,",
				"          effectiveAttachmentOptions,",
				"          ganttEnabled,",
				"          hasSummaryFields,",
				"          id,",
				"          isMultiPicklistEnabled,",
				"          modifiedAt,",
				"          name,",
				"          permalink,",
				"          resourceManagementEnabled,",
				"          resourceManagementType,",
				"          rows",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten5",
				"flatten3, flatten5 join(columnId == columns.id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}